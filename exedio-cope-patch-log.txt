
CHANGELOG for cope patch

This file lists all changes relevant for the user - especially all
API changes and new features recommended for most users. The log may
omit bug fixes.
The items are sorted inversely, i.e. latest items are on top

--------------------------------------------------------------------------
* Patch console servlet provides four URLs (paths) to get the global status as plain text:
  /status/model (Connected or Not connected)
  /status/mutex (none or mutex content, or Unknown (not connected))
  /status/patches (Not Done, Currently executing, Done, Failed or Unknown (not connected))
  /status/schema (Ok, Warning, Error or Unknown (not connected))
* Patches#run and Patches#preempt want a new PatchInitiator to log where patch executions are triggered.
    Default factory method is PatchInitiator.createFromStackTrace() which inspects the execution stack, but we strongly recommend
    to use one Method of ServletPatchInitiatorUtil to determine the Servlet or servlet.Filter which causes the patch run,
    optionally together with the logged in user from a HttpServletRequest
* New PatchConsoleServlet in own ivy configuration 'console'.
	To use the new patch console create a class like below in your project:

		public class MainPatchConsoleServlet extends PatchConsoleServlet
		{
			public Patches getPatches()
			{
				return MainPatches.getPatches();
			}
		}

	and add it to your web.xml.

	BEWARE:
	Restrict access to this servlet to technical administrators only.

* Patches#isDone does not return false on concurrent isDone calls but waits until these calls are finished.
* Patches#preempt can be executed multiple times.
* PatchesBuilder#withDoneListener added
* Patch ID is required to contain printable ASCII characters only and must be trimmed.
* RevisionPatch added.
	Stores revision logs into patch logs for preserving information
	after dropping revisions.
* now compatible with COPE version that has default implementations for interface methods (>=8904..8919)
* requires JDK 1.8.0_60
* PatchRun#host and PatchMutex#host added
	This affects database schema, requires a new column in two tables.
* Patches#getIDs() added
* PatchesBuilder#insertStaleFromResource added
* Patches#preempt added
	Is useful when working with an empty schema.
* PatchMutex#stage added
	This affects database schema, requires a new column.
	On MySQL you may use the following revision:

		new Revision(NNN, "PatchMutex#stage added",
			"ALTER TABLE `CopePatchMutex` ADD COLUMN `stage` int",
			"UPDATE      `CopePatchMutex` SET `stage` = -2147483648")

* SchemaPatch added
	This affects database schema, requires a new table.
* Patch#getStage() added
	This breaks backwards API compatibility, causes compiler error.
	This affects database schema, requires a new column.
* Patch#check() added
	This breaks backwards API compatibility, causes compiler error.
* PatchMutex#numberOfPatches added
	This affects database schema, requires a new column.
* global mutex added against concurrent execution in cluster
	This affects database schema, requires a new table.
* PatchRun#savepoint added
	This affects database schema, requires a new column.
* requires JDK 1.7u6
* PatchesBuilder introduced
