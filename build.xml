<?xml version="1.0"?>

<project name="copepatch" default="build" basedir="."
			xmlns:if="ant:if"
			xmlns:unless="ant:unless">

	<echo taskname="which ant" message="${ant.version}" />
	<echo taskname="which java" message="${java.vm.name} ${java.version}" />
	<!--suppress AntMissingPropertiesFileInspection -->
	<property file="local.properties" />
	<property file="project.properties" />

	<import>
		<fileset dir="macros">
			<include name="*.xml" />
		</fileset>
	</import>

	<taskdef resource="com/exedio/cope/instrument/ant.properties" onerror="failall">
		<classpath>
			<fileset dir="lib/instrument" />
			<pathelement location="lib/jsr305/jsr305.jar" />
		</classpath>
	</taskdef>

	<taskdef resource="com/exedio/jspm/ant.properties" onerror="failall">
		<classpath>
			<fileset dir="lib/jspm" />
		</classpath>
	</taskdef>

	<target name="src.instrument" unless="skip.instrument">
		<instrument
				dir="${basedir}/src"
				verify="${instrument.verify}"
				verbose="false">
			<suppressWarnings>
				<constructor>RedundantArrayCreation</constructor>
				<constructor>RedundantSuppression</constructor>
				<wrapper>FinalMethodInFinalClass</wrapper>
				<wrapper>RedundantSuppression</wrapper>
				<wrapper>UnnecessarilyQualifiedStaticUsage</wrapper>
			</suppressWarnings>
		</instrument>
	</target>

	<target name="src.compile" depends="src.instrument">
		<compile srcdir="src">
			<classpath>
				<fileset dir="lib/runtime" />
				<pathelement location="lib/instrument/exedio-cope-instrument-annotations.jar" />
				<pathelement location="lib/jsr305/jsr305.jar" />
			</classpath>
		</compile>
	</target>

	<target name="testsrc.instrument" depends="src.compile" unless="skip.instrument">
		<instrument
				dir="${basedir}/testsrc"
				verify="${instrument.verify}"
				verbose="false">
			<classpath>
				<pathelement location="build/classes/src" />
				<fileset dir="lib/test" />
			</classpath>
			<suppressWarnings>
				<wrapper>FinalMethodInFinalClass</wrapper>
				<wrapper>RedundantSuppression</wrapper>
				<wrapper>UnnecessarilyQualifiedStaticUsage</wrapper>
			</suppressWarnings>
		</instrument>
	</target>

	<target name="testsrc.compile" depends="src.compile, testsrc.instrument">
		<compile srcdir="testsrc">
			<classpath>
				<pathelement location="build/classes/src" />
				<fileset dir="lib/test" />
				<pathelement location="lib/instrument/exedio-cope-instrument-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="consolesrc.jspm">
		<jspm>
			<fileset dir="consolesrc" includes="**/*.jspm" />
		</jspm>
	</target>

	<target name="consolesrc.compile" depends="src.compile,consolesrc.jspm">
		<compile srcdir="consolesrc">
			<classpath>
				<fileset dir="lib/console" />
				<fileset dir="lib/runtime" />
				<pathelement location="build/classes/src" />
			</classpath>
		</compile>
	</target>

	<target name="checkAntIfUnless">
		<property name="antSupportsGenericIfUnless" value="true"/>
		<fail message="ant 1.9.1 required: https://ant.apache.org/manual/ifunless.html" unless:set="antSupportsGenericIfUnless"/>
	</target>

	<target name="test" depends="testsrc.compile, checkAntIfUnless">
		<mkdir dir="build/testresults" />
		<mkdir dir="build/testtmpdir" />
		<java taskname="junit" fork="yes" dir="${basedir}"
				failonerror="true"
				classname="org.junit.platform.console.ConsoleLauncher">
			<arg line="--details ${test-details}" />
			<arg line="--disable-ansi-colors" if:set="disable-ansi-colors" />
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="build/classes/testsrc" />
				<fileset dir="lib/test" />
			</classpath>
			<arg line="--fail-if-no-tests" />
			<arg line="--scan-class-path build/classes/testsrc" unless:set="test" />
			<arg line="--select-class ${test}" if:set="test" />
			<arg line="--reports-dir build/testresults" />
			<sysproperty key="java.io.tmpdir" value="${basedir}/build/testtmpdir" />
			<sysproperty key="java.awt.headless" value="true" />
			<assertions><enable/></assertions>
		</java>
	</target>

	<target name="jar" depends="jar.runtime, jar.console" />

	<target name="jar.runtime" depends="src.compile">
		<jar jarfile="build/exedio-cope-patch.jar" filesonly="true" duplicate="fail" strict="fail" level="9">
			<fileset dir="build/classes/src" />
			<manifest>
				<attribute name="Specification-Title" value="exedio cope patch" />
				<attribute name="Specification-Version" value="${build.tag}" />
				<attribute name="Specification-Vendor" value="exedio GmbH" />
				<attribute name="Implementation-Title" value="exedio cope patch" />
				<attribute name="Implementation-Version" value="${build.tag}" />
				<attribute name="Implementation-Vendor" value="exedio GmbH" />
				<attribute name="Class-Path" value="exedio-cope.jar" />
			</manifest>
		</jar>
		<plot file="build/exedio-cope-patch.jar" />
	</target>

	<target name="jar.console" depends="consolesrc.compile">
		<jar jarfile="build/exedio-cope-patch-console.jar" filesonly="true" duplicate="fail" strict="fail" level="9">
			<fileset dir="build/classes/consolesrc" />
			<manifest>
				<attribute name="Specification-Title" value="exedio cope patch console" />
				<attribute name="Specification-Version" value="${build.tag}" />
				<attribute name="Specification-Vendor" value="exedio GmbH" />
				<attribute name="Implementation-Title" value="exedio cope patch console" />
				<attribute name="Implementation-Version" value="${build.tag}" />
				<attribute name="Implementation-Vendor" value="exedio GmbH" />
			</manifest>
		</jar>
		<plot file="build/exedio-cope-patch-console.jar" />
	</target>

	<target name="jar.src">
		<mkdir dir="build" />
		<zip destfile="build/exedio-cope-patch-src.zip" filesonly="true" whenempty="fail" duplicate="fail" level="9">
			<zipfileset dir="${basedir}/src"><include name="**/*.java"/><exclude name="**/*_Jspm.java" /></zipfileset>
			<zipfileset dir="${basedir}/consolesrc">
				<include name="**/*.java" />
			</zipfileset>
		</zip>
		<plot file="build/exedio-cope-patch-src.zip" />
	</target>

	<target name="clean">
		<delete>
			<fileset dir="src"><!-- not created anymore -->
				<include name="**/*_Jspm.java" />
			</fileset>
			<fileset dir="consolesrc"><!-- not created anymore -->
				<include name="**/*_Jspm.java" />
			</fileset>
		</delete>
		<delete dir="build" />
		<delete dir="webtestweb/WEB-INF/classes" /><!-- not created anymore -->
		<delete dir="webtestweb/WEB-INF/lib" /><!-- not created anymore -->
		<delete dir="tomcat" /><!-- not created anymore -->
	</target>

	<target name="instrument" depends="src.instrument, testsrc.instrument" />

	<target name="compile" depends="src.compile, consolesrc.compile, testsrc.compile" />

	<target name="api">
		<api title="cope patch">
			<src>
				<fileset dir="src" includes="**/*.java" />
			</src>
			<myClasspath>
				<fileset dir="lib/runtime" />
				<pathelement location="lib/instrument/exedio-cope-instrument-annotations.jar" />
				<pathelement location="lib/jsr305/jsr305.jar" />
			</myClasspath>
		</api>
	</target>

	<target name="src" depends="consolesrc.jspm" description="creates all sources, so the IDE does not complain" />

	<target name="build"
			depends="compile, test, jar" />


	<target name="all" depends="build, jar.src, api" />

	<target name="jenkins" depends="all">
		<copy todir="${basedir}/build/success">
			<fileset file="${basedir}/build/exedio-cope-patch.jar" />
			<fileset file="${basedir}/build/exedio-cope-patch-console.jar" />
			<fileset file="${basedir}/build/exedio-cope-patch-src.zip" />
			<fileset file="${basedir}/exedio-cope-patch-log.txt" />
		</copy>
		<copy file="ivy/ivy.xml" todir="build/success" overwrite="true">
			<filterset>
				<filter token="BUILD_REVISION" value="${build.revision}" />
				<filter token="BUILD_STATUS"   value="${build.status}" />
			</filterset>
		</copy>
	</target>

	<target name="publishlocally" depends="jar, jar.src">
		<ant dir="ivy" target="publishlocally" />
	</target>

</project>
